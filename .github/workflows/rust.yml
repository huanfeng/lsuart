name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 添加必要的权限
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact: target/release/lsuart.exe
          - os: ubuntu-latest
            artifact: target/release/lsuart
          - os: macos-latest
            artifact: target/release/lsuart

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    # 添加 Ubuntu 依赖安装步骤
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config

    - name: Build Release
      run: cargo build --verbose --release
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-binary
        path: ${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        name: Release ${{ github.sha }}
        tag_name: v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
